#include <iostream>
#include <string>

//работа со строками языка Си очень сложна и требует крайней аккуратности
//во многом из-за того, что требует работы с памятью вручную
//С++ решает эту проблему за счёт ООП и деструкторов
void construct_string() {
	std::string s1; //пустая строка
	std::string s2('a', 10); //строка длиной 10, заполненная символом 'a'
	std::string s3("Hello World!"); //создание строки С++ из массива символов, завершаемого нулём
	std::string s4(s3); //копия строки s3

	//каждое создание строки требует динамической памяти,
	//при выходе строки из области видимости память будет освобождена деструктором

	//строки устроены таким образом, что могут быть выведены на экран через оператор вывода
	std::cout << "s1: " << s1 << "\ns2: " << s2 << "\ns3: " << s3 << "\ns4: " << s4 << std::endl;

	//как и массивы символов, строки можно заполнять с клавиатуры
	std::string in;
	std::cin >> in;
	std::cout << "in: " << in;

	//метод get объекта std::cin позволяет читать данные в массив-буфер
	char buff[100];
	std::cin.get(buff, 100, '\n');//прочесть не более 99 символов до '\n' (перевода строки)

	//функция std::getline читает данные в стандартную строку std::string
	std::string in2;
	std::getline(std::cin, in2, '\n'); //чтение данных в стандартную строку
	//количество необходимой памяти определяется автоматически
}


int main() {
	

	return 0;
}